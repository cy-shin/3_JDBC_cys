<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
	<comment>admin-query.xml file</comment>

	<!-- 키워드로 검색 -->
	<entry key = 'keywordSearch'>
		SELECT CALL_NO, TOPIC_NAME, BOOK_NAME, AUTHOR, PUBLISHER, LOC_NAME, AVAIL_NAME, NVL(TO_CHAR(DUE_DATE,'YYYY-MM-DD'),'-') DUE_DATE
		FROM BOOK
		JOIN TOPIC USING (TOPIC_CODE)
		JOIN LOCATION USING (LOC_CODE)
		JOIN AVAILABILITY USING (AVAIL_CODE)
		JOIN LENT_RECORD USING(BOOK_NO))
		WHERE BOOK_NAME = ?
		OR AUTHOR = ?
		OR PUBLISHER = ?
	</entry>
	
	<!--  전체 검색 -->
	<entry key ='searchAll'>
		SELECT BOOK.BOOK_NO, CALL_NO, TOPIC_NAME, BOOK_NAME, AUTHOR, PUBLISHER, LOC_NAME, AVAIL_NAME, NVL(TO_CHAR(DUE_DATE, 'YYYY-MM-DD'), '-') DUE_DATE
		FROM LENT_RECORD MAIN
		RIGHT JOIN BOOK BOOK ON (MAIN.BOOK_NO = BOOK.BOOK_NO)
		JOIN TOPIC USING(TOPIC_CODE)
		JOIN LOCATION USING(LOC_CODE)
		JOIN AVAILABILITY USING(AVAIL_CODE)
		WHERE REC_NO IS NULL
		OR REC_NO = (SELECT MAX(REC_NO) 
					 FROM LENT_RECORD SUB
					 WHERE MAIN.BOOK_NO = SUB.BOOK_NO)
		</entry>
	
	<!--  연체 도서 검색 -->
	<entry key = "searchOverdue1">
		<![CDATA[
			SELECT REC_NO, BOOK_NO, CALL_NO, BOOK_NAME, USER_NO, USER_NAME,
			TO_CHAR(LENT_DATE, 'YYYY-MM-DD') LENT_DATE, 
			TO_CHAR(REC.DUE_DATE, 'YYYY-MM-DD') DUE_DATE,
			NVL(TO_CHAR(RETURN_DATE, 'YYYY-MM-DD'), '-') RETURN_DATE
			FROM LENT_RECORD REC
			JOIN BOOK USING(BOOK_NO)
			JOIN "USER" USING(USER_NO)
			WHERE SYSDATE > REC.DUE_DATE
			AND RETURN_DATE IS NULL
		]]>	
	</entry>

	<entry key = "searchOverdue2">
		AND USER_NO = ?
	</entry>	
	
	<entry key = "searchOverdue3">
			ORDER BY REC_NO DESC
	</entry>
	
	<!-- =========================================================================  -->
	<!-- 청구기호로 검색 -->
	<entry key = 'bookInfo'>
		SELECT CALL_NO, TOPIC_NAME, BOOK_NAME, AUTHOR, PUBLISHER, LOC_NAME, AVAIL_NAME, NVL(TO_CHAR(DUE_DATE, 'YYYY-MM-DD'),'-') DUE_DATE
		FROM LENT_RECORD MAIN
		RIGHT JOIN BOOK BOOK ON (MAIN.BOOK_NO = BOOK.BOOK_NO)
		JOIN TOPIC USING(TOPIC_CODE)
		JOIN LOCATION USING(LOC_CODE)
		JOIN AVAILABILITY USING(AVAIL_CODE)
		WHERE (REC_NO IS NULL
		OR REC_NO = (SELECT MAX(REC_NO) 
					 FROM LENT_RECORD SUB
					 WHERE MAIN.BOOK_NO = SUB.BOOK_NO))
		AND CALL_NO = ?
		
	</entry>
	
	
	<!-- 책 반납 -->
	<entry key = "returnLentRec">
		UPDATE LENT_RECORD
		SET RETURN_DATE = SYSDATE,
		DUE_DATE = NULL
		WHERE BOOK_NO = ?
		AND RETURN_DATE IS NOT NULL
	</entry>
	
	<!-- 책 대출 -->
	<entry key = "lentBook">
		INSERT INTO LENT_RECORD(REC_NO, BOOK_NO, USER_NO, DUE_DATE)
		VALUES(SEQ_REC_NO.NEXTVAL, ?, ?, SYSDATE + 14)
	</entry>
	
	<entry key =
	
</properties>
